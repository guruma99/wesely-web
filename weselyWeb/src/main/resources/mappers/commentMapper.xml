<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- namespace는 반드시 DAO인터페이스와 이름이 일치해야 한다. -->
<mapper namespace="com.wesely.dao.CommentDAO">
	<!-- 1. ref에 대한 댓글의 개수 구하기 : 목록보기에 댓글 개수 출력 -->
	<select id="selectCountByRef" parameterType="int" resultType="int">
		select count(*) from comm where ref=#{ref} 
	</select>
	<!-- 2. ref에 대한 모든 댓글 얻기 -->
	<select id="selectListByRef" parameterType="int" resultType="CommentVO">
		select * from comm where ref=#{ref} order by id desc
	</select>
	<!-- 3. 댓글 저장 -->
	<insert id="insert" parameterType="CommentVO">
		insert into 
			comm
		values
			(comm_id_seq.nextval, #{ref},#{name},#{content},sysdate)
	</insert>
	<!-- 4. 댓글 수정 -->
	<update id="update" parameterType="CommentVO">
		update 
			comm
		set
			content=#{content}, regdate=sysdate
		where
			id=#{id}
	</update>
	<!-- 5. 댓글 1개 삭제 -->
	<delete id="delete" parameterType="int">
		delete from comm where id=#{id}
	</delete>	
	<!-- 6. 지정 ref대한 모든 댓글 삭제하기 -->
	<delete id="deleteByRef" parameterType="int">
		delete from comm where ref=#{ref}
	</delete>	
	<!-- 7. 1개 얻기  -->
	<select id="selectById" parameterType="int" resultType="CommentVO">
		select * from comm where id=#{id}
	</select>
	<!-- 8. 좋아요 수 증가-->
	
</mapper>